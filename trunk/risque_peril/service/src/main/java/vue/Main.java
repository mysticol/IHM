/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * mainFrame.java
 *
 * Created on 28 nov. 2010, 13:23:13
 */
package vue;

import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import java.util.HashMap;
import java.util.LinkedList;

import javax.swing.JPanel;
import javax.swing.ListSelectionModel;


import controleur.ControleurGeneric;
import controleur.ControleurRadio;
import controleur.ListenerFk;
import javax.swing.UIManager;
import pojos.Client;
import pojos.Hotel;
import pojos.Localisation;
import pojos.Manifestation;
import pojos.Reservation;
import pojos.ReservationHotel;
import pojos.ReservationManif;
import pojos.ReservationRestau;
import pojos.Restaurant;
import pojos.Voyage;
import model.Mode;
import model.ModeParam;
import modeltable.JTableModelInterface;
import modeltable.TableModelClient;
import modeltable.TableModelHotel;
import modeltable.TableModelLocalisation;
import modeltable.TableModelManifestation;
import modeltable.TableModelReservation;
import modeltable.TableModelReservationHotel;
import modeltable.TableModelReservationManif;
import modeltable.TableModelReservationRestau;
import modeltable.TableModelRestaurant;

import modeltable.TableModelVoyage;
import session.HibernateUtil;

/**
 *
 * @author Mister B
 */
public class Main extends javax.swing.JFrame {

    private ControleurRadio radioControleur;
    private LinkedList<ControleurGeneric> listContr;
    private Mode actualmode;
    private HashMap<Mode, ModeParam> modeur;


    /** Creates new form mainFrame */
    public Main() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        superJtableBD = new javax.swing.JTable();
        panelAmovible = new javax.swing.JPanel();
        jSuppression = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSelecTable = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Back office");

        superJtableBD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        superJtableBD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(superJtableBD);

        javax.swing.GroupLayout panelAmovibleLayout = new javax.swing.GroupLayout(panelAmovible);
        panelAmovible.setLayout(panelAmovibleLayout);
        panelAmovibleLayout.setHorizontalGroup(
            panelAmovibleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 653, Short.MAX_VALUE)
        );
        panelAmovibleLayout.setVerticalGroup(
            panelAmovibleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 193, Short.MAX_VALUE)
        );

        jSuppression.setText("Suppression sans pitier de l'enregistrement");

        jLabel1.setText("Selection Table:");

        jSelecTable.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
                    .addComponent(jSuppression, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelAmovible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSelecTable, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSelecTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(panelAmovible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSuppression)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {


        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    /*
                     * {CDE/Motif=com.sun.java.swing.plaf.motif.MotifLookAndFeel,
                    Metal=javax.swing.plaf.metal.MetalLookAndFeel,
                    Nimbus=com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel,
                    Windows=com.sun.java.swing.plaf.windows.WindowsLookAndFeel,
                    Windows Classic=com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel}
                     */


                   UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
                } catch (Exception e) {
                }
                Main mv = new Main();

                mv.init();
                mv.setVisible(true);





            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jSelecTable;
    private javax.swing.JButton jSuppression;
    private javax.swing.JPanel panelAmovible;
    private javax.swing.JTable superJtableBD;
    // End of variables declaration//GEN-END:variables

    public void placeMachin(JPanel pane) {
        this.panelAmovible.removeAll();
        this.panelAmovible.repaint();
        GridBagLayout fl = new GridBagLayout();

        panelAmovible.setLayout(fl);
        panelAmovible.add(pane);
        /*    GridBagConstraints constraint= new GridBagConstraints();
        constraint.fill= GridBagConstraints.BOTH;
        fl.setConstraints(pane, constraint);
         */

        panelAmovible.revalidate();


    }

    public void setMode(Mode m) {

        ModeParam mp = this.modeur.get(m);
        this.placeMachin(mp.getPanel());
        this.superJtableBD.setModel(mp.getModel());
        superJtableBD.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        this.actualmode = m;


    }

    private void init() {




        
     

        listContr = new LinkedList<ControleurGeneric>();
        HibernateUtil<Client> emClient = new HibernateUtil<Client>(Client.class);
        HibernateUtil<Hotel> emHotel = new HibernateUtil<Hotel>(Hotel.class);
        HibernateUtil<Manifestation> emManif = new HibernateUtil<Manifestation>(Manifestation.class);
        HibernateUtil<Localisation> emLoca = new HibernateUtil<Localisation>(Localisation.class);
        HibernateUtil<Reservation> emReserv = new HibernateUtil<Reservation>(Reservation.class);
        HibernateUtil<ReservationHotel> emReservHotel = new HibernateUtil<ReservationHotel>(ReservationHotel.class);
        HibernateUtil<ReservationManif> emReservManif = new HibernateUtil<ReservationManif>(ReservationManif.class);
        HibernateUtil<ReservationRestau> emReservRestau = new HibernateUtil<ReservationRestau>(ReservationRestau.class);
        HibernateUtil<Restaurant> emRestaut = new HibernateUtil<Restaurant>(Restaurant.class);
        
        HibernateUtil<Voyage> emVoyage = new HibernateUtil<Voyage>(Voyage.class);

        jClientPane clientPane = new jClientPane();
        jHotelPane hotelPane = new jHotelPane();
        jRestaurantPane restaurantPane = new jRestaurantPane();
        jVoyagePane voyagePane = new jVoyagePane();
        jManifestationPane manifPane = new jManifestationPane();
        
        jLocalisationPane localisationPane = new jLocalisationPane();
        jReservationHotelPane reservHotelPane = new jReservationHotelPane();
        jReservationRestaurantPane reservRestauPane = new jReservationRestaurantPane();
        jReservationManifPane reservationManifPane = new jReservationManifPane();
        jReservationnPane reservationnPane = new jReservationnPane();


        TableModelClient modelClient = new TableModelClient(emClient);
        TableModelHotel modelHotel = new TableModelHotel(emHotel);
        TableModelLocalisation modelLocalisation = new TableModelLocalisation(emLoca);
        TableModelManifestation modelManifestation = new TableModelManifestation(emManif);
        TableModelReservation modelReservation = new TableModelReservation(emReserv);
        TableModelReservationHotel modelReservationHotel = new TableModelReservationHotel(emReservHotel);
        TableModelReservationManif modelReservationManif = new TableModelReservationManif(emReservManif);
        TableModelReservationRestau modelReservationRestau = new TableModelReservationRestau(emReservRestau);
        TableModelRestaurant modelRestaurant = new TableModelRestaurant(emRestaut);
         TableModelVoyage modelVoyage = new TableModelVoyage(emVoyage);







        ControleurGeneric<Client> controlClient = new ControleurGeneric<Client>();
        ControleurGeneric<Hotel> controlHotel = new ControleurGeneric<Hotel>();
        ControleurGeneric<Restaurant> controlRestaurant = new ControleurGeneric<Restaurant>();
        ControleurGeneric<Localisation> controlLocalisation = new ControleurGeneric<Localisation>();
        ControleurGeneric<Voyage> controlVoyage = new ControleurGeneric<Voyage>();
        ControleurGeneric<Reservation> controlReservation = new ControleurGeneric<Reservation>();
        ControleurGeneric<ReservationHotel> controlReservationHotel = new ControleurGeneric<ReservationHotel>();
        ControleurGeneric<ReservationManif> controlReservationManif = new ControleurGeneric<ReservationManif>();
        ControleurGeneric<ReservationRestau> controlReservationRestau = new ControleurGeneric<ReservationRestau>();
        ControleurGeneric<Manifestation> controlManifestation = new ControleurGeneric<Manifestation>();


        listContr.add(controlClient);
        listContr.add(controlHotel);
        listContr.add(controlRestaurant);
        listContr.add(controlLocalisation);
        listContr.add(controlVoyage);
        listContr.add(controlReservation);
        listContr.add(controlReservationHotel);
        listContr.add(controlReservationManif);
        listContr.add(controlReservationRestau);
        listContr.add(controlManifestation);



        controlClient.setEm(emClient);
        controlClient.setModel(modelClient);
        controlClient.setClientControleur(clientPane);

        controlHotel.setEm(emHotel);
        controlHotel.setModel(modelHotel);
        controlHotel.setClientControleur(hotelPane);

        controlRestaurant.setEm(emRestaut);
        controlRestaurant.setModel(modelRestaurant);
        controlRestaurant.setClientControleur(restaurantPane);

        controlLocalisation.setEm(emLoca);
        controlLocalisation.setModel(modelLocalisation);
        controlLocalisation.setClientControleur(localisationPane);

        controlVoyage.setEm(emVoyage);
        controlVoyage.setModel(modelVoyage);
        controlVoyage.setClientControleur(voyagePane);

      

        controlReservation.setEm(emReserv);
        controlReservation.setModel(modelReservation);
        controlReservation.setClientControleur(reservationnPane);

        controlReservationHotel.setEm(emReservHotel);
        controlReservationHotel.setModel(modelReservationHotel);
        controlReservationHotel.setClientControleur(reservHotelPane);

        controlReservationManif.setEm(emReservManif);
        controlReservationManif.setModel(modelReservationManif);
        controlReservationManif.setClientControleur(reservationManifPane);

        controlReservationRestau.setEm(emReservRestau);
        controlReservationRestau.setModel(modelReservationRestau);
        controlReservationRestau.setClientControleur(reservRestauPane);

        controlManifestation.setEm(emManif);
        controlManifestation.setModel(modelManifestation);
        controlManifestation.setClientControleur(manifPane);







        clientPane.getNewButton().addActionListener(controlClient.getNewActionListener());
        clientPane.getSaveButton().addActionListener(controlClient.getSaveActionListener());


        hotelPane.getNewButton().addActionListener(controlHotel.getNewActionListener());
        hotelPane.getSaveButton().addActionListener(controlHotel.getSaveActionListener());
        hotelPane.getButtonFwIDLocalisation().addActionListener(new ListenerFk(this, modelLocalisation, hotelPane.getFieldFkLocalisation()));



        restaurantPane.getNewButton().addActionListener(controlRestaurant.getNewActionListener());
        restaurantPane.getSaveButton().addActionListener(controlRestaurant.getSaveActionListener());
        restaurantPane.getButtonFwIDLocalisation().addActionListener(new ListenerFk(this, modelLocalisation, restaurantPane.getFieldFkLocalisation()));


localisationPane.getNewButton().addActionListener(controlLocalisation.getNewActionListener());
        localisationPane.getSaveButton().addActionListener(controlLocalisation.getSaveActionListener());


        voyagePane.getNewButton().addActionListener(controlVoyage.getNewActionListener());
        voyagePane.getSaveButton().addActionListener(controlVoyage.getSaveActionListener());
        voyagePane.getButtonFwIDArrive().addActionListener(new ListenerFk(this, modelLocalisation, voyagePane.getFieldFkIdArrive()));
        voyagePane.getButtonFwIDClient().addActionListener(new ListenerFk(this, modelClient, voyagePane.getFieldFkClient()));
        voyagePane.getButtonFwIDDepart().addActionListener(new ListenerFk(this, modelLocalisation, voyagePane.getFieldFkIdDepart()));


      


        reservationnPane.getNewButton().addActionListener(controlReservation.getNewActionListener());
        reservationnPane.getSaveButton().addActionListener(controlReservation.getSaveActionListener());
        reservationnPane.getButtonFwIDClient().addActionListener(new ListenerFk(this,modelClient, reservationnPane.getFieldFkClient()));
        reservationnPane.getButtonFwIDhotel().addActionListener(new ListenerFk(this,modelHotel, reservationnPane.getFieldFkIdHotem()));
        reservationnPane.getButtonFwIDmanif().addActionListener(new ListenerFk(this,modelManifestation, reservationnPane.getFieldFkIdManif()));
        reservationnPane.getButtonFwIDrestau().addActionListener(new ListenerFk(this,modelRestaurant, reservationnPane.getFieldFkIdRestau()));
        reservationnPane.getButtonFwIDvoyage().addActionListener(new ListenerFk(this,modelVoyage, reservationnPane.getFieldFkIdVoyage()));

      




        reservHotelPane.getNewButton().addActionListener(controlReservationHotel.getNewActionListener());
        reservHotelPane.getSaveButton().addActionListener(controlReservationHotel.getSaveActionListener());
        reservHotelPane.getButtonFwIDClient().addActionListener(new ListenerFk(this, modelClient, reservHotelPane.getFieldFkClient()));
        reservHotelPane.getButtonFwIDHotel().addActionListener(new ListenerFk(this, modelHotel, reservHotelPane.getFieldFkIdHotel()));


        reservationManifPane.getNewButton().addActionListener(controlReservationManif.getNewActionListener());
        reservationManifPane.getSaveButton().addActionListener(controlReservationManif.getSaveActionListener());
        reservationManifPane.getButtonFwIDClient().addActionListener(new ListenerFk(this, modelClient, reservationManifPane.getFieldFkClient()));
        reservationManifPane.getButtonFwIDManif().addActionListener(new ListenerFk(this, modelManifestation, reservationManifPane.getFieldFkIdManif1()));



        reservRestauPane.getNewButton().addActionListener(controlReservationRestau.getNewActionListener());
        reservRestauPane.getSaveButton().addActionListener(controlReservationRestau.getSaveActionListener());
        reservRestauPane.getButtonFwIDClient().addActionListener(new ListenerFk(this, modelClient, reservRestauPane.getFieldFkclient()));
        reservRestauPane.getButtonFwIDRestaurant().addActionListener(new ListenerFk(this, modelRestaurant, reservRestauPane.getFieldFkIdRestaurant()));
        

        manifPane.getNewButton().addActionListener(controlManifestation.getNewActionListener());
        manifPane.getSaveButton().addActionListener(controlManifestation.getSaveActionListener());
        manifPane.getButtonFwIDLocalisation().addActionListener(new ListenerFk(this, modelLocalisation, manifPane.getFieldFkLocalisation()));
        


        this.jSuppression.addActionListener(this.dilateListeuneur());






        this.radioControleur = new ControleurRadio(this);
        this.modeur = new HashMap<Mode, ModeParam>();




        modeur.put(Mode.Client, new ModeParam(modelClient, clientPane));
        modeur.put(Mode.Hotel, new ModeParam(modelHotel, hotelPane));
        modeur.put(Mode.Restaurant, new ModeParam(modelRestaurant, restaurantPane));
        modeur.put(Mode.Localisation, new ModeParam(modelLocalisation, localisationPane));
        modeur.put(Mode.Voyage, new ModeParam(modelVoyage, voyagePane));
        modeur.put(Mode.Manifestation, new ModeParam(modelManifestation, manifPane));
        modeur.put(Mode.Reservation, new ModeParam(modelReservation, reservationnPane));
        modeur.put(Mode.ReservationHotel, new ModeParam(modelReservationHotel, reservHotelPane));
        modeur.put(Mode.ReservationRestaurant, new ModeParam(modelReservationRestau, reservRestauPane));
        modeur.put(Mode.ReservationManif, new ModeParam(modelReservationManif, reservationManifPane));

  jSelecTable.removeAllItems();

        for (Mode m: modeur.keySet()){
            jSelecTable.addItem(m);
        }


        this.superJtableBD.addMouseListener(this.mouseListener());




           jSelecTable.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
              setMode( (Mode)jSelecTable.getSelectedItem());
            }
        });


    setMode( (Mode)jSelecTable.getSelectedItem());
    }

    public HashMap<Mode, ModeParam> getModeur() {
        return modeur;
    }

    private MouseListener mouseListener() {


        return new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {


                ModeParam ff = modeur.get(actualmode);
                EntityPane pane = (EntityPane) ff.getPanel();
                JTableModelInterface model = ff.getModel();

                pane.loadEntity(model.getRows(superJtableBD.getSelectedRow()));

            }

            @Override
            public void mousePressed(MouseEvent e) {
            }

            @Override
            public void mouseReleased(MouseEvent e) {
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }
        };
    }



    private ActionListener dilateListeuneur(){
        return new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {

                 ModeParam ff = modeur.get(actualmode);
                EntityPane pane = (EntityPane) ff.getPanel();
                JTableModelInterface model = ff.getModel();
                
                Integer dd= model.getIDForSelected(superJtableBD.getSelectedRow());
                if (dd!=null){
                model.getEm().delete(dd);
                model.refresh();
                pane.clearField();
                }
               

            }
        };
    }

}
